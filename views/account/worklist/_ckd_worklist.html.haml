#worklist.span-23.round.box.flowsheet.last.ajax-form
	= render :partial => "ajax_spinner"
	%h3.no-margin Labs Due Worklist
	%br
	= form_tag account_worklist_path, :class => "form" do
		Sort by
		= radio_button_tag :sort_by, 'name', @sort_by == 'name'
		%b Name
		= radio_button_tag :sort_by, 'date', @sort_by == 'date'
		%b Earliest due date
		%br/
		%br/
		View tests:&nbsp;&nbsp;
		- @test_filter_options.each_with_index do |tfo, i|
			%b= tfo[0]
			= check_box_tag 'test_filter[]', tfo[1], ((@test_filter.include? tfo[1]) ? true : false)
			&nbsp;&nbsp;
			- if i > 0 and i % 7 == 0
				%br/

		%br/
		%br/
		View by Practice
		= select_tag :practice, options_from_collection_for_select(@practices, 'client_id', 'name', @practice.nil? ? '' : @practice), :prompt => '-- Select --'
		= "- or -"
		%br/
		View by Case Manager
		= select_tag :case_manager, options_from_collection_for_select(@case_managers, 'contact_id', 'name', @case_manager.nil? ? '' : @case_manager), :prompt => '-- Select --'
		%br/
		View all patients with a test date
		= select_tag :date_options, options_for_select(@preset_options, @date_options), :onchange => "submitPresetDates(this.value)"
		%br/
		%div{ :id => 'date_fields', :style => "display:#{@date_options == 'custom' ? 'block' : 'none'}"}
			View all patients with a test due between (date)
			- if @worklist_overdue_date.nil?
				= datepicker '', :worklist_overdue_date, {'size' => 15, :dateFormat => 'mm-dd-yy'}
			- else
				= datepicker '', :worklist_overdue_date, {'size' => 15, 'value' => @worklist_overdue_date.strftime('%m-%d-%Y'), :dateFormat => 'mm-dd-yy'}
			and (date)
			- if @worklist_due_soon_date.nil?
				= datepicker '', :worklist_due_soon_date, {'size' => 15, :dateFormat => 'mm-dd-yy'}
			- else
				= datepicker '', :worklist_due_soon_date, {'size' => 15, 'value' => @worklist_due_soon_date.strftime('%m-%d-%Y'), :dateFormat => 'mm-dd-yy'}
			%br/
		= submit_tag "Update", :disable_with => "Please wait...", :onclick => 'return validateInput()'
		%br/
		%br/

	- if upcoming.size == 0
		%p No patients found.
	- else
		.span-24.last{:style => "color: red;"}
			red &#x2a;
			%span{:style => "color: black;"} = test overdue
		.span-24.last
			= page_entries_info @upcoming
			(Displaying #{select_tag :per_page, options_for_select({'5' => 5, '10' => 10, '30' => 30, '50' => 50, 'All' => @all_active_total}, @per_page.to_i), :onchange => "submitWithPerPage(this.value, #{@test_filter})"} results per page)
		.span-14
			= will_paginate @upcoming, :params =>  {:per_page => params[:per_page], :worklist_overdue_date => params[:worklist_overdue_date], :worklist_due_soon_date => params[:worklist_due_soon_date], :test_filter => params[:test_filter], :sort_by => params[:sort_by], :date_options => params[:date_options], :case_manager => params[:case_manager], :practice => params[:practice]}
		%table.flowsheet#upcoming
			%thead
				%tr
					%th Patient
					%th Birth
					- if session[:account_diseases].include?('DM')
						%th DM
					- if session[:account_diseases].include?('CKD')
						%th CKD Stage
					- @columns.each do |k, v|
						- if k == 'Phosphorous'
							- k = 'Phos'
						- if k == 'Electrolytes'
							- k = 'Lytes'
						- if k == 'Calcium'
							- k = 'Calc'
						- if k == 'Albumin'
							- k = 'Album'
						%th= k
			%tbody
				- tests = @dm_tests + @ckd_tests
				- upcoming.each do |patient|
					%tr
						%td= link_to "#{patient.last_name}, #{patient.first_name}", flowsheet_account_patient_path(obfuscate_encrypt(patient.patient_id, session))
						%td= patient.dob.to_date.strftime('%m-%d-%Y')
						- if session[:account_diseases].include?('DM')
							%td= patient.active_dm? ? "YES" : "NO"
						- if session[:account_diseases].include?('CKD')
							- if patient.active_ckd?
								%td.tooltip{:help => patient.disease_stage_lookup.disease_description}= patient.disease_stage_lookup.disease_stage
							- else
								%td NO
						- @columns.each do |k, v|
							-if tests.include?(v)
								- if patient.overdue_since_date?(v, @worklist_overdue_date)
									%td.overdue.tooltip{:help => patient.worklist_view.text_by_date(v, @worklist_overdue_date, k)}
										= patient.worklist_view.due_date(v).strftime('%m-%d-%Y')
										&#x2a;
								- elsif patient.upcoming_by_date?(v, @worklist_due_soon_date)
									%td.tooltip{:help => patient.worklist_view.text_by_date(v, @worklist_due_soon_date, k)}= patient.worklist_view.due_date(v).strftime('%m-%d-%Y')
								- else
									%td= "-"
							- else
								%td= "-"

		.span-14
			= will_paginate @upcoming, :params =>  {:per_page => params[:per_page], :worklist_overdue_date => params[:worklist_overdue_date], :worklist_due_soon_date => params[:worklist_due_soon_date], :test_filter => params[:test_filter], :sort_by => params[:sort_by], :date_options => params[:date_options], :case_manager => params[:case_manager], :practice => params[:practice]}
		.span-6.last.right
			= link_to "Export to Excel", url_for(:format => 'xls'), :onclick => "return completeExportHref(this, #{@test_filter}, '#{@sort_by}', '#{@per_page}')"
			= select_tag :export_qty, options_for_select([['All', 'all'], ['This Page Only', 'page']])

- content_for :javascript_includes do
	:javascript

		function submitWithPerPage(value, test_filter) {
			urlString = '?per_page='+value;
			urlString += "&sort_by=#{params[:sort_by]}"
			urlString += "&date_options=#{params[:date_options]}"

			if ("#{params[:worklist_overdue_date]}" != '') {
				urlString += "&worklist_overdue_date=#{params[:worklist_overdue_date]}"
			}
			if ("#{params[:worklist_due_soon_date]}" != '') {
				urlString += "&worklist_due_soon_date=#{params[:worklist_due_soon_date]}"
			}
			if (test_filter != '') {
				urlString += "&test_filter=" + test_filter;
			}
			if ("#{params[:case_manager]}" != '') {
				urlString += "&case_manager=#{params[:case_manager]}"
			}
			if ("#{params[:practice]}" != '') {
				urlString += "&practice=#{params[:practice]}"
			}

			window.location = urlString;
		}

		function submitPresetDates(value) {

			var ele = document.getElementById('date_fields');
		    if (value == 'custom') {
				ele.setAttribute('style', 'display:block')
			} else {
				ele.setAttribute('style', 'display:none')
				var dates = value.split("->");
				document.getElementsByName('[worklist_overdue_date]')[0].value = dates[0];
				document.getElementsByName('[worklist_due_soon_date]')[0].value = dates[1];
				// first commit button is for the Search box, which will put you on the Patients page
				// second is for the update of criteria on the worklist page
				document.getElementsByName('commit')[1].click();
		    }
		}

		function validateInput() {
			var eleCM = document.getElementsByName('case_manager')[0];
			var eleProv = document.getElementsByName('practice')[0];
			if (eleCM.value != '' && eleProv.value != '') {
				alert("Please do not filter by both Case Manager and Practice.");
				return false;
			}
			return true;
		}

		function completeExportHref(thisLink, test_filter, sort_by, per_page) {
			href = thisLink.href;
			export_qty = document.getElementsByName('export_qty')[0].value
			href += "?export_qty=" + export_qty
			href += "&test_filter=" + test_filter;
			href += "&sort_by=" + sort_by;
			href += "&per_page=" + per_page;

			if ("#{params[:worklist_overdue_date]}" != '') {
				href += "&worklist_overdue_date=#{params[:worklist_overdue_date]}"
			}
			if ("#{params[:worklist_due_soon_date]}" != '') {
				href += "&worklist_due_soon_date=#{params[:worklist_due_soon_date]}"
			}
			if ("#{params[:case_manager]}" != '') {
				href += "&case_manager=#{params[:case_manager]}"
			}
			if ("#{params[:page]}" != '') {
				href += "&page=#{params[:page]}"
			}
			if ("#{params[:practice]}" != '') {
				href += "&practice=#{params[:practice]}"
			}
			if ("#{params[:date_options]}" != '') {
				href += "&date_options=#{params[:date_options]}"
			}
			window.location = href;
			return false;

		}


